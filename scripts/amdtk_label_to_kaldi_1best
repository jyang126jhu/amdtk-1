#!/usr/bin/env python

import argparse
import os
import amdtk


def MFCC_num_frams(name,MFCC_path):
    feature_file=name+".fea"
    mfcc=amdtk.readHtk(MFCC_path + '/' + feature_file)
    return mfcc.shape[0]

def readMlf(Label, kaldi_1best, MFCC_path,sampPeriod=100000):
    
    num_frame=0
    total_num_frame=0
    name=os.path.splitext(os.path.basename(Label))[0]

    with open(Label,'r') as f:
        line=f.readlines()
        for key in line:
            tokens=key.split()
            if not len(tokens) == 3:
                raise ValueError('Invalid Mlf')
            else:
                num_frame=num_frame + int(int(tokens[1])/sampPeriod - int(tokens[0])/sampPeriod)
                for frame in range(int(int(tokens[1])/sampPeriod -int(tokens[0])/sampPeriod)):
                    if tokens[2] == 'sil':
                       label='0'
                    else:
                       label=tokens[2][1:]
                    kaldi_1best.write(' [ '+ label + ' 1 ]')
                total_num_frame= total_num_frame + num_frame
        if (MFCC_num_frams(name,MFCC_path) == num_frame +1):
            print ("mfcc: " + str(MFCC_num_frams(name,MFCC_path)) +  " frames, post: " + str(num_frame) +  " frames")
            kaldi_1best.write(' [ ' + label + ' 1 ]')
        kaldi_1best.write('\n')

    return total_num_frame

def main():

    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument('htk_label',help='AUD label file, *.lab')
    parser.add_argument('kaldi_1best',help='Kaldi format 1best post, *.post')
    parser.add_argument('mfcc_path',help='MFCC path with *.htk file')
    args = parser.parse_args()
    
    name=os.path.splitext(os.path.basename(args.htk_label))[0]
    k1best= open(args.kaldi_1best,'w')
    k1best.write(name)

    total_num_frame= readMlf(args.htk_label,k1best,args.mfcc_path)
    print(total_num_frame)

if __name__ == '__main__':
   main()
else:
    raise ImportError('This script cannot be imported')
